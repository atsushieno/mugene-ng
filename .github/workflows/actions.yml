name: build dist

on:
  push:
  pull_request:

jobs:
  build:
    name: build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-13, macos-14]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: setup apt packages on Linux
      if: matrix.os == 'ubuntu-24.04'
      run: |
        sudo apt-get update
        echo y | sudo apt-get install doxygen cmake ninja-build libasound2-dev
    - name: set up JDK 22
      uses: actions/setup-java@v4
      with:
        java-version: 22
        distribution: temurin

    # only for NON-releases on macos-13
    - name: macos-13 lightweight build with Gradle for libs
      if: ${{ !startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'macos-13') }}
      run: ./gradlew --warning-mode all publishToMavenLocal
    # only for releases on macos-13
    - name: macos-13 lightweight publish with Gradle for libs
      if: ${{ startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'macos-13') }}
      run: ./gradlew --no-daemon --warning-mode all publishMacosX64PublicationToMavenCentralRepository #publishIosX64PublicationToMavenCentralRepository
      env:
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
    # only for NON-releases on macos-14
    - name: macos-14 lightweight build with Gradle for libs and apps
      if: ${{ !startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'macos-14') }}
      run: ./gradlew --warning-mode all publishToMavenLocal
    # only for releases on macos-14
    - name: macos-14 lightweight publish with Gradle for libs and apps
      if: ${{ startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'macos-14') }}
      run: ./gradlew --no-daemon --warning-mode all publishMacosArm64PublicationToMavenCentralRepository PublishIosArm64PublicationToMavenCentralRepository PublishIosSimulatorArm64PublicationToMavenCentralRepository
      env:
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
    # only for NON-releases on Linux
    - name: linux build
      if: ${{ !startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'ubuntu') }}
      run: ./gradlew --warning-mode all build publishToMavenLocal
    # only for releases on Linux
    - name: linux publish with Gradle
      if: ${{ startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'ubuntu') }}
      run: ./gradlew --warning-mode all build publishAllPublicationsToMavenCentralRepository
      env:
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
      # only for releases on Linux
    - name: linux publish with Gradle
      if: ${{ startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'ubuntu') }}
      run: ./gradlew --warning-mode all build publishJsPackageToNpmjsRegistry
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

    - name: upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: mugene-ng-artifacts-${{ matrix.os }}
        path: |
          mugene/build/libs/*.jar
          mugene/build/outputs/aar/*.aar
          mugene-console/build/bin/
    # Create release, only for release tags
    - name: Create Release
      uses: ncipollo/release-action@v1.12.0
      if: ${{ success() && startsWith(github.ref, 'refs/tags/') && contains(matrix.os, 'ubuntu') }}
    # only for releases
    - name: deploy to GitHub Pages
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: JamesIves/github-pages-deploy-action@4.1.2
      with:
        branch: gh-pages
        folder: mugene/build/dokka/html

